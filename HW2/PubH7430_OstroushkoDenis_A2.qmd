---
title: "Homework 2"
author: "Denis Ostroushko"
format: pdf
execute: 
  echo: false
  message: false
  warning: false
---

```{r read in packages }
#| results: hide
#| include: false 
path_main_folder = substr(getwd(), 1, nchar(getwd()) - nchar("HW1"))

source(paste0(path_main_folder, "Master Packages.R"))
```


```{R}
#| results: hide
dental <- read_csv('gumR.csv', show_col_types = FALSE)

dental <- 
  dental %>% 
  mutate_at(
    vars(c('trtgroup', 'sex', 'race')), 
    ~ as.factor(.)
  )
```

```{r data set summary for myself }
#| eval: false 

nrow(dental)
length(unique(dental$id))
summary(dental)

dental2 = na.omit(dental)

nrow(dental2)
length(unique(dental2$id))
summary(dental2)
```

# Introduction 

## Handling missing data 

Since we are not given explicit instructions on how to handle missing data, and what imputation techniques we need to use, I will preform a complete case analysis. There are `r nrow(dental)` observations in the full data set. Dropping observations 
with at least one missing value results in a data set with `r nrow(na.omit(dental))` observations. 

```{r}
dental <- dental %>% na.omit()
```

# Question 1

## 1- A

@fig-hists shows the distribution of outcome variable on two scales. We added one unit, ` dmfs + 1`, when performing natural
logarithm transformation. All 0-values on the log scale represent 0-values on the original scale. 

```{r}
#| label: fig-hists
#| fig-cap: "Distribtion of dmfs outcome variable on the natural and logarithmic scales"
ggplot(data = dental, 
       mapping = aes(x = dmfs)) + 
  theme_classic() + 
  theme(title = element_text(size = 8)) + 
  geom_histogram(color = "black", fill = "darkgrey", bins = 10) + 
  ylab("Count") + 
  xlab("dmfs on the original scale")-> p1 

ggplot(data = dental, 
       mapping = aes(x = log(dmfs+1))) + 
  theme_classic() + 
  theme(title = element_text(size = 8)) + 
  geom_histogram(color = "black", fill = "darkgrey", bins = 10) + 
  ylab("Count") + 
  xlab("dmfs on the logarithmic  scale") -> p2 

grid.arrange(p1, p2, nrow = 1 )

```

## 1 - B

We measure baseline mutans streptococci in log(cfu/ml), for the rest of this assignment I will use  `log(cfu/ml)` to 
refer to the units, or measurement of this predictor variable. 

We measure `dmfs` as the count of diseased/missing/filled surfaces, allowing one tooth to contribute up to 5 to a total count for each individual, 
which is a positive integer random variable. 

### (i)

Model: Gaussian GLM with an identity link. Also known as a linear regression model. 

**(1)**

We assume that mean for each random variable $Y_i$ can be expressed as a linear combination of predictors $X_{ji}$ and 
some model parameters $\beta_{j}$. We also assume that $Y_i$ are independent random variables with constant variance. 

**(2)**

Variance is a constant estimated from the model, and has no relationship with the mean, and therefore has no relationship 
with model parameters $\beta_j$

**(3)**

For a gaussian general linear model with one predictor and an identity link we write mean of $Y_i$ as 

  \begin{equation}
  \hat E[Y_i] = \hat \beta_0 + \hat \beta_1 * X_{1i}
  \end{equation}

Where $Y_i$ is the condition of the teeth, *dmfs*, and $X_{1i}$ is the baseline mutans streptococci.

@tbl-1b-1 shows estimated model parameters. 

```{r 1b linear model}
#| label: tbl-1b-1
#| tbl-cap: "Gaussian GLM with identity link model estiamtes"
#| 
glm_1 = glm(dmfs ~ mutpre, data = dental, family = gaussian(link = "identity"))

summary(glm_1)$coefficients %>% 
  kable(booktabs = T, 
        digits = 2, 
        align = 'c') %>% 
  kable_styling(latex_options = 'hold_position') %>% 
  add_footnote("mutpre represents the effect of baseline mutans streptococci")

summary(glm_1)$coefficients[rownames(summary(glm_1)$coefficients) == "mutpre", ]["Estimate"] -> est_1
direction <- ifelse(sign(est_1) == 1, "incresase", "decrease")
est_1_show = round(abs(est_1), 2)

confint(glm_1)[rownames(confint(glm_1)) == "mutpre"] %>% 
  round(., 2) %>% 
  paste0(., collapse = ", ") %>% 
  paste0("(", ., ")") -> confint_1

significace_1 <- summary(glm_1)$coefficients[rownames(summary(glm_1)$coefficients) == "mutpre", ]["Pr(>|t|)"]
signif_1 = ifelse(significace_1 >= 0.05, 
                   "interval includes 0, there is no evidence of a statistically significant association", 
                   "interval does not include 0, there is strong evidence of a statistically significant association")

```

We interpret that one unit increase in the baseline log(cfu/ml) measurement results in the average `r est_1_show` 
`r direction` in the number of diseased/missing/filled surfaces. Effect is bounded by a `r confint_1` 95% confidence interval,
`r signif_1` between baseline log(cfu/ml) and the number of diseased/missing/filled surfaces.

### (ii)

Model: Gaussian GLM with a log link.

**(1)**

We assume that logarithm of a mean for each random variable $Y_i$ can be expressed as a linear combination of predictors $X_{ji}$ and 
some model parameters $\beta_{j}$. We also assume that $E[Y_i]$, and thus $log(E[Y_i])$ are independent random variables with constant variance. 

**(2)**

We know that for a Gaussian, i.e. normal, distribution, mean and variance have no functional relationship, therefore, 
parameters $\beta_j$ have no effect on variance. We estimate variance to be a constant parameter. 

**(3)**

```{r 1b linear model with log link}
#| label: tbl-1b-2
#| tbl-cap: "Gaussian GLM with log link model estiamtes"
#| 
glm_1 = glm(dmfs ~ mutpre, data = dental, family = gaussian(link = "log"), start = c(0,1))

summary(glm_1)$coefficients %>% 
  kable(booktabs = T, 
        digits = 2, 
        align = 'c'
        ) %>% 
  kable_styling(latex_options = 'hold_position') %>% 
  add_footnote("mutpre represents the effect of baseline mutans streptococci")

summary(glm_1)$coefficients[rownames(summary(glm_1)$coefficients) == "mutpre", ]["Estimate"] -> est_1
direction <- ifelse(sign(est_1) == 1, "incresase", "decrease")
est_1_show = round(abs(exp(est_1)), 2)

confint(glm_1)[rownames(confint(glm_1)) == "mutpre"] %>% 
  exp() %>% 
  {(.-1)*100} %>% 
  round(. , 2) %>% 
  paste0(., collapse = ", ") %>% 
  paste0("(", ., ")") -> confint_1

significace_1 <- summary(glm_1)$coefficients[rownames(summary(glm_1)$coefficients) == "mutpre", ]["Pr(>|t|)"]
signif_1 = ifelse(significace_1 >= 0.05, 
                   "interval includes 1, there is no evidence of a statistically significant association", 
                   "interval does not include 1, there is strong evidence of a statistically significant association")

```

We interpret that one unit increase in the baseline log(cfu/ml) measurement results in approximately `r ( est_1_show - 1)*100` 
percent increase in the average number of diseased/missing/filled surfaces. Effect is bounded by a `r confint_1` 95% confidence interval,
`r signif_1` between baseline log(cfu/ml) and the average number of diseased/missing/filled surfaces.


### (iii)

Model:  Gaussian GLM with identity link, using log-transformed values of dmfs. 
I add +1 to the number of DMF teeth in order to perform a logarithmic transformation and create a linear model. 

**(1)**

Assume that we can write $E[log(Y_i + 1)]$ can be written as a linear combination of predictors. Independence assumption 
applies here as well. 

**(2)**

Same as **(i)** and **(ii)**

**(3)**

```{r 1b log linear model with identity}
#| label: tbl-1b-3
#| tbl-cap: "Gaussian GLM with identity link and log transformation of response: model estiamtes"
#| 
glm_1 = glm(log(dmfs+1) ~ mutpre, data = dental, family = gaussian(link = "identity"), start = c(0,1))

summary(glm_1)$coefficients %>% 
  kable(booktabs = T, 
        digits = 2, 
        align = 'c') %>% 
  kable_styling(latex_options = 'hold_position') %>% 
  add_footnote("mutpre represents the effect of baseline mutans streptococci")

summary(glm_1)$coefficients[rownames(summary(glm_1)$coefficients) == "mutpre", ]["Estimate"] -> est_1
direction <- ifelse(sign(est_1) == 1, "incresase", "decrease")
est_1_show = round(abs(est_1), 2)

confint(glm_1)[rownames(confint(glm_1)) == "mutpre"] %>% 
  round(., 2) %>% 
  paste0(., collapse = ", ") %>% 
  paste0("(", ., ")") -> confint_1

significace_1 <- summary(glm_1)$coefficients[rownames(summary(glm_1)$coefficients) == "mutpre", ]["Pr(>|t|)"]
signif_1 = ifelse(significace_1 >= 0.05, 
                   "interval includes 0, there is no evidence of a statistically significant association", 
                   "interval does not include 0, there is strong evidence of a statistically significant association")

```

We interpret that one unit increase in the baseline log(cfu/ml) measurement results in the `r est_1_show` 
increase in the average number of diseased/missing/filled surfaces on a logarithmic scale. Effect is bounded by a `r confint_1` 95% confidence interval,
`r signif_1` between baseline log(cfu/ml) and the average number of diseased/missing/filled surfaces on a natural logarithmic scale. 

### (iv)

Poisson regression model with a log link function 

**(1)**

We assume that we can model $log(E[Y_i])$ as a linear combination of estimated model parameters and observed predictors. 
Independence assumption holds here as well. 

**(2)**

We assume that $Var[Y_i | \textbf{X}_i] = E[Y_i]$, so we expect that as our predicted mean $E[Y_i]$ increases, variance 
increases as well. 

Specifying conditions to our case, variance can be written in terms of model parameters: 

\begin{equation}
\widehat{Var[Y_i | \textbf{X}_i]} = \widehat{E[Y_i|\textbf{X}_i]} = exp[\hat \beta_0 + \hat \beta_1 * X_{1i}]
\end{equation}

**(3)**

```{r 1b poisson}
#| label: tbl-1b-4
#| tbl-cap: "Poisson GLM with log link model estiamtes"
#| 
glm_1 = glm(dmfs ~ mutpre, data = dental, family = poisson(link = "log"), start = c(0,1))

summary(glm_1)$coefficients %>% 
  kable(booktabs = T, 
        digits = 2, 
        align = 'c'
        ) %>% 
  kable_styling(latex_options = 'hold_position') %>% 
  add_footnote("mutpre represents the effect of baseline mutans streptococci")

summary(glm_1)$coefficients[rownames(summary(glm_1)$coefficients) == "mutpre", ]["Estimate"] -> est_1
direction <- ifelse(sign(est_1) == 1, "incresase", "decrease")
est_1_show = round(abs(exp(est_1)), 2)

confint(glm_1)[rownames(confint(glm_1)) == "mutpre"] %>% 
  exp() %>% 
  {(. - 1) * 100} %>%  
  round(., 2) %>% 
  paste0(., collapse = ", ") %>% 
  paste0("(", ., ")") -> confint_1

significace_1 <- summary(glm_1)$coefficients[rownames(summary(glm_1)$coefficients) == "mutpre", ]["Pr(>|z|)"]
signif_1 = ifelse(significace_1 >= 0.05, 
                   "interval includes 1, there is no evidence of a statistically significant association", 
                   "interval does not include 1, there is strong evidence of a statistically significant association")

```


We interpret that one unit increase in the baseline log(cfu/ml) measurement results in the `r (est_1_show - 1)*100` 
percent increase in the average number of diseased/missing/filled surfaces. Effect is bounded by a `r confint_1` 95% confidence interval,
`r signif_1` between baseline log(cfu/ml) levels and the average number of diseased/missing/filled surfaces.

## 1 - C

* Immediately we observe that Poisson regression with log link and Gaussian regression with log link produce the most similar estimates,
and result in similar estimates. The only difference is that we allow variance of predicted means to be dependent on the value of the 
mean when using a poisson regression model. It is evident that such model fits the data better, and results in a slope estimate that is 
statistically significant, giving us evidence that baseline MS values re associated with the condition of teeth.

* No Gaussian model was able to detect statistically significant associations. I suspect that is due to the fact that a Gaussian model 
imposes a strict assumption of constant variance. Perhaps, for smaller values of damaged surfaces the true variance is smaller than that
of higher counts of damaged surfaces. Such data fits Poisson distribution, and regression model, better, which is what we saw right now. 

\newpage

## 1 - D

**(i)**

@fig-resid-1 shows residual plot and normality of residuals for a Gaussian regression model with an identity link. We display Pearson 
residuals, which were studentized using estimated variance of residuals. Smooth trend line fluctuates around zero line for all 
estimated values, suggesting that the mean of residuals is zero. There are some data points for which we underestimate the value of 
damaged surfaces, however, they do not appear to be severe outliers. 

It appears that residuals deviate from a normal distribution, as evidenced by the QQ-normal plot. Such shape of observed residuals, when 
compared with the standard normal distribution, suggests that the right tail is quite heavy, while the left end of distribution is not 
"stretched" enough. Overall, there is some evidence to suggests that the residuals are not normally distributed . 

```{r normal identify glm residuals }
#| label: fig-resid-1
#| fig-cap: "Residuals do not fit normal distribution. No evidence of serious outliers, or issues with linear fit." 
#| fig-height: 6
#| fig-width: 12
glm_1 = glm(dmfs ~ mutpre, data = dental, family = gaussian(link = "identity"))

resid_data = 
  data.frame(
    fitted = glm_1$fitted.values, 
    resid = glm_1$residuals, 
    studentized_resid = rstudent(glm_1)
  )

r1 = ggplot(data = resid_data, 
            mapping = aes(x = fitted, y = studentized_resid)) + 
  theme_classic() + 
  geom_point() + 
  geom_hline(yintercept = 0, color = "red") + 
  geom_hline(yintercept = 2, color = "darkgrey", linetype = "dashed") + 
  geom_hline(yintercept = -2, color = "darkgrey", linetype = "dashed") + 
  geom_smooth(se = T, color = "blue") + 
  scale_y_continuous(limits = c(min(resid_data$studentized_resid) - 1,
                                max(resid_data$studentized_resid) + 1)) + 
  
  labs(
    x = "Fitted values of dmfs", 
    y = "Pearson Residuals", 
    title = "Gaussian GLM - Identity Link Residual Plot"
  )

ggplot(data = resid_data, 
       mapping = aes(sample = studentized_resid)) +
  theme_classic() + 
  stat_qq() + 
  stat_qq_line() + 

  labs(x = "Thepretical Quantiles of Standard Normal Distribution", 
       y = "Pearson Residuals Sample Quantile") -> r1_qq

grid.arrange(r1, r1_qq, nrow = 1)

```

\newpage 

**(ii)**

@fig-resid-2 shows residual plot and normality of residuals for a Gaussian regression model with a log link. We display Pearson 
residuals, which were studentized using estimated variance of residuals. Smooth trend line fluctuates around zero line for all 
estimated values, suggesting that the mean of residuals is zero. It also confirms that there are no issues with a linear trend, or evidence of omitted predictors. There are some data points for which we underestimate the value of 
damaged surfaces, however, they do not appear to be severe outliers. 

It appears that residuals deviate from a normal distribution, as evidenced by the QQ-normal plot. Such shape of observed residuals, when 
compared with the standard normal distribution, suggests that the right tail is quite heavy, while the left end of distribution is not 
"stretched" enough. Overall, there is some evidence to suggests that the residuals are not normally distributed . 

```{r normal log link glm residuals }
#| label: fig-resid-2
#| fig-cap: "Residuals do not fit normal distribution. No evidence of serious outliers, or issues with linear fit." 
#| fig-height: 6
#| fig-width: 12
glm_1 = glm(dmfs ~ mutpre, data = dental, family = gaussian(link = "log"), start = c(0,1))

resid_data = 
  data.frame(
    fitted = glm_1$fitted.values, 
    resid = glm_1$residuals, 
    studentized_resid = rstudent(glm_1)
  )

r1 = ggplot(data = resid_data, 
            mapping = aes(x = fitted, y = studentized_resid)) + 
  theme_classic() + 
  geom_point() + 
  geom_hline(yintercept = 0, color = "red") + 
  geom_hline(yintercept = 2, color = "darkgrey", linetype = "dashed") + 
  geom_hline(yintercept = -2, color = "darkgrey", linetype = "dashed") + 
  geom_smooth(se = T, color = "blue") + 
  scale_y_continuous(limits = c(min(resid_data$studentized_resid) - 1,
                                max(resid_data$studentized_resid) + 1)) + 
  
  labs(
    x = "Fitted values of dmfs", 
    y = "Pearson Residuals", 
    title = "Gaussian GLM - Log Link Residual Plot"
  )

ggplot(data = resid_data, 
       mapping = aes(sample = studentized_resid)) +
  theme_classic() + 
  stat_qq() + 
  stat_qq_line() + 

  labs(x = "Thepretical Quantiles of Standard Normal Distribution", 
       y = "Pearson Residuals Sample Quantile") -> r1_qq

grid.arrange(r1, r1_qq, nrow = 1)
```

\newpage 

**(iii)**

@fig-resid-3 shows residual plots for a linear model with a log transformed response. These are the most serious issues with a linear model 
out of the three we evaluated so far. First, there are some serious residual outliers. Some residuals are 5 standard deviations below 
their predicted value, implying that the true value is much smaller than what the linear model estimates. These outliers are all in the 
center of predicted values. This may appear because log transformation helps us compare values from different orders of magnitude, 
however, similar values, especially smaller, are sensitive to mishandling. Moreover, QQ-lot suggests that the left tail is not "long" 
enough to fit the standard normal distribution. 

```{r log-normal identity glm residuals }
#| label: fig-resid-3
#| fig-cap: "Residuals have a much heavier lower tail than a theoretical standard normal distirbution. Evidence of serious residual outliers." 
#| fig-height: 6
#| fig-width: 12
glm_1 = glm(log(dmfs+1) ~ mutpre, data = dental, family = gaussian(link = "identity"), start = c(0,1))

resid_data = 
  data.frame(
    fitted = glm_1$fitted.values, 
    resid = glm_1$residuals, 
    studentized_resid = rstudent(glm_1)
  )

r1 = ggplot(data = resid_data, 
            mapping = aes(x = fitted, y = studentized_resid)) + 
  theme_classic() + 
  geom_point() + 
  geom_hline(yintercept = 0, color = "red") + 
  geom_hline(yintercept = 2, color = "darkgrey", linetype = "dashed") + 
  geom_hline(yintercept = -2, color = "darkgrey", linetype = "dashed") + 
  geom_smooth(se = T, color = "blue") + 
  scale_y_continuous(limits = c(min(resid_data$studentized_resid) - 1,
                                max(resid_data$studentized_resid) + 1)) + 
  
  labs(
    x = "Fitted values of dmfs", 
    y = "Pearson Residuals", 
    title = "Log Transformed Response Gaussian GLM - Identity Link Residual Plot"
  )

ggplot(data = resid_data, 
       mapping = aes(sample = studentized_resid)) +
  theme_classic() + 
  stat_qq() + 
  stat_qq_line() + 

  labs(x = "Thepretical Quantiles of Standard Normal Distribution", 
       y = "Pearson Residuals Sample Quantile") -> r1_qq

grid.arrange(r1, r1_qq, nrow = 1)
```

\newpage 

**(iv)**

We evaluate residuals of poisson regression by studying residual plots and spread of residuals, as well as fit of predicted values vs 
observed values. @fig-resid-4 shows that we have an issue with the poisson regression model. We know that the assumption that mean 
must equal variance is highly restrictive. Poisson model underestimates true variance. This is evidenced by Pearson residuals, where some
residuals are 10 standard deviations away from the predicted value. Since studentized residuals rely on parameter $\phi$, we cam see that 
estimated parameter $\phi = 1$ is too small, and the true parameter must be much larger. 

Therefore, mean variance relationship must be misspecified in this case. 

We can see that the fitted values and confidence bands produced from the assumed mean-variance relationship are too tight, and fail to 
capture the true variation degree in the data. 

```{r poisson glm log lin residuals }
#| label: fig-resid-4
#| fig-cap: "Clear issue with Variance Fit: Need to use quasipoisson model to estiamte correct variance" 
#| fig-height: 6
#| fig-width: 12
glm_1 = glm(dmfs ~ mutpre, data = dental, family = poisson(link = "log"), start = c(0,1))

disp = summary(glm_1)$dispersion

resid_data = 
  data.frame(
    outcome = dental$dmfs, 
    fitted = glm_1$fitted.values, 
    resid = glm_1$residuals, 
    studentized_resid = rstudent(glm_1)
  )

ggplot(data = resid_data, 
            mapping = aes(x = fitted, y = studentized_resid)) + 
  theme_classic() + 
  geom_point() + 
  geom_hline(yintercept = 0, color = "red") + 
  geom_hline(yintercept = 2, color = "darkgrey", linetype = "dashed") + 
  geom_hline(yintercept = -2, color = "darkgrey", linetype = "dashed") + 
  geom_smooth(se = T, color = "blue") + 
  scale_y_continuous(limits = c(min(resid_data$studentized_resid) - 1,
                                max(resid_data$studentized_resid) + 1)) + 
  
  labs(
    x = "Fitted values of dmfs", 
    y = "Pearson Residuals", 
    title = "Poisson GLM - Log Link Residual Plot"
  ) -> r1 

ggplot(data = resid_data, 
       mapping = aes(x = fitted, 
                     y = outcome)) + 
  theme_classic() + 
  theme(legend.position = "bottom") + 
  geom_point() + 
  geom_line(mapping = aes(x = fitted, y = fitted, color = "Fitted mean")) +
  geom_line(mapping = aes(x = fitted, y = fitted + 1.96 * sqrt(fitted * disp), color = "Confidence Interval")) + 
  geom_line(mapping = aes(x = fitted, y = fitted - 1.96 * sqrt(fitted * disp), color = "Confidence Interval")) + 
  
  labs(y = "Observed Value of DMF surfaces", 
       x = "Predicted Value", 
       color = "Line Types") -> r2 

grid.arrange(r1, r2, nrow =1)



```

```{r}
glm_1 = glm(dmfs ~ mutpre, data = dental, family = quasipoisson(link = "log"), start = c(0,1))

disp = summary(glm_1)$dispersion

```

@fig-resid-5 shows residual plot for a quasipoisson regression model with a log link. Overdispersion parameter is `r round(disp,2)`, which is much larger than 
1. Estimating variance function with a correct $\phi$ parameter produces confidence bound for fitted means that captures variation of data points much 
more appropriately. 

Residual plot also shows that studentized residuals are now mostly within -2/2 bounds, with mean fluctuating around 0. Quasipoisson regression is a more appropriate fit for the sample of data we have.

```{r quasipossion regression model }
#| label: fig-resid-5
#| fig-cap: "Demonstration that Quasipoisson regression is a better fit to the data" 
#| fig-height: 6
#| fig-width: 12
# glm_1 = glm(dmfs ~ mutpre, data = dental, family = poisson(link = "log"), start = c(0,1))

resid_data = 
  data.frame(
    outcome = dental$dmfs, 
    fitted = glm_1$fitted.values, 
    resid = glm_1$residuals, 
    studentized_resid = rstudent(glm_1)
  )

ggplot(data = resid_data, 
            mapping = aes(x = fitted, y = studentized_resid)) + 
  theme_classic() + 
  geom_point() + 
  geom_hline(yintercept = 0, color = "red") + 
  geom_hline(yintercept = 2, color = "darkgrey", linetype = "dashed") + 
  geom_hline(yintercept = -2, color = "darkgrey", linetype = "dashed") + 
  geom_smooth(se = T, color = "blue") + 
  scale_y_continuous(limits = c(min(resid_data$studentized_resid) - 1,
                                max(resid_data$studentized_resid) + 1)) + 
  
  labs(
    x = "Fitted values of dmfs", 
    y = "Pearson Residuals", 
    title = "Quasi-Poisson GLM - Log Link Residual Plot"
  ) -> r1 

ggplot(data = resid_data, 
       mapping = aes(x = fitted, 
                     y = outcome)) + 
  theme_classic() + 
  theme(legend.position = "bottom") + 
  geom_point() + 
  geom_line(mapping = aes(x = fitted, y = fitted, color = "Fitted mean")) +
  geom_line(mapping = aes(x = fitted, y = fitted + 1.96 * sqrt(fitted * disp), color = "Confidence Interval")) + 
  geom_line(mapping = aes(x = fitted, y = fitted - 1.96 * sqrt(fitted * disp), color = "Confidence Interval")) + 
  
  labs(y = "Observed Value of DMF surfaces", 
       x = "Predicted Value", 
       color = "Line Types") -> r2 

grid.arrange(r1, r2, nrow =1)

```

\newpage 

# Question 2 

```{r}
dental2 = dental %>% filter(trtgroup != "NoGum")
dental2$trtgroup = factor(dental2$trtgroup, levels = c("Placebo", "Drug"))
```

There are `r length(which(dental$trtgroup == "NoGum"))` people in the control group who received no gum treatment, in the complete case data set. After removing 
these individuals, we are left with `r nrow(dental2)` observations for the comparison of the effect of gum type on the mutans streptococci levels three months after 
randomization. 

## 2 - A

```{r 2a - model 1}
#| label: tbl-2a-linear-mod
#| tbl-cap: "Gaussin GLM with identity link model estiamtes"
glm2 <- glm(mut3mos ~ trtgroup, data = dental2, family = gaussian(link = "identity"))

summary(glm2)$coefficients %>% 
  kable(booktabs = T, 
        digits = 2, 
        align = 'c'
        ) %>% 
  kable_styling(latex_options = 'hold_position') %>% 
  add_footnote("trtgroupDrug represents the effect of treatment on the outcome") %>% 
  add_footnote("Placebo is the reference for `Drug` group")

summary(glm2)$coefficients[rownames(summary(glm2)$coefficients) == "trtgroupDrug", ]["Estimate"] -> est_2
direction2 <- ifelse(sign(est_2) == 1, "higher", "lower")
direction <- ifelse(sign(est_2) == 1, "incresase", "decrease")
est_2_show = round(abs(exp(est_2)), 2)

confint(glm2)[rownames(confint(glm2)) == "trtgroupDrug"] %>% 
  round(., 2) %>% 
  paste0(., collapse = ", ") %>% 
  paste0("(", ., ")") -> confint_2

significace_2 <- summary(glm2)$coefficients[rownames(summary(glm2)$coefficients) == "trtgroupDrug", ]["Pr(>|t|)"]
signif_2 = ifelse(significace_2 >= 0.05, 
                   "interval includes 0, there is no evidence of a statistically significant association", 
                   "interval does not include 0, there is strong evidence of a statistically significant association")
```

@tbl-2a-linear-mod shows contrast between the average levels of MS between treated and placebo group three months after stating treatment. 
Average MS levels for the treatment group were `r round(abs(est_2),2) ` log(cfu/ml) `r direction2` than MS levels for placebo group. 
The estimate is bounded by the `r confint_2` 95% confidence interval. The `r signif_2` between treatment assignment and log(cfu/ml) MS 
levels. 

## 2 - B

```{r 2a - model 2}
#| label: tbl-2a-multilinear-mod
#| tbl-cap: "Gaussian GLM with identity link model estiamtes"

glm2 <- glm(mut3mos ~ trtgroup + mutpre, data = dental2, family = gaussian(link = "identity"))

summary(glm2)$coefficients %>% 
  kable(booktabs = T, 
        digits = 2, 
        align = 'c'
        ) %>% 
  kable_styling(latex_options = 'hold_position') %>% 
  add_footnote("trtgroupDrug represents the effect of treatment on the outcome") %>% 
  add_footnote("Placebo is the reference for `Drug` group")

summary(glm2)$coefficients[rownames(summary(glm2)$coefficients) == "trtgroupDrug", ]["Estimate"] -> est_2
direction2 <- ifelse(sign(est_2) == 1, "higher", "lower")
direction <- ifelse(sign(est_2) == 1, "incresase", "decrease")
est_2_show = round(abs(exp(est_2)), 2)

confint(glm2)[rownames(confint(glm2)) == "trtgroupDrug"] %>% 
  round(., 2) %>% 
  paste0(., collapse = ", ") %>% 
  paste0("(", ., ")") -> confint_2

significace_2 <- summary(glm2)$coefficients[rownames(summary(glm2)$coefficients) == "trtgroupDrug", ]["Pr(>|t|)"]
signif_2 = ifelse(significace_2 >= 0.05, 
                   "interval includes 0, there is no evidence of a statistically significant association", 
                   "interval does not include 0, there is strong evidence of a statistically significant association")

```


@tbl-2a-multilinear-mod shows contrast between the average levels of MS between treated and placebo group three months after stating treatment, after adjusting for other predictors. 
Average MS levels for the treatment group were `r round(abs(est_2),2) ` log(cfu/ml) `r direction2` than MS levels for placebo group, 
after accounting for other predictors. 
The estimate is bounded by the `r confint_2` 95% confidence interval. The `r signif_2` between treatment assignment and log(cfu/ml) MS 
levels. 

## 2 - C 

```{r 2a - model 3}
#| label: tbl-2a-interact-mod
#| tbl-cap: "Gaussian GLM with identity link model estiamtes"

glm2 <- glm(mut3mos ~ trtgroup * mutpre, data = dental2, family = gaussian(link = "identity"))

summary(glm2)$coefficients %>% 
  kable(booktabs = T, 
        digits = 2, 
        align = 'c'
        ) %>% 
  kable_styling(latex_options = 'hold_position') %>% 
  add_footnote("trtgroupDrug represents the effect of treatment on the outcome") %>% 
  add_footnote("Placebo is the reference for `Drug` group")%>% 
  add_footnote("trtgroupDrug:mutpr represents treatment effect modification")

summary(glm2)$coefficients[rownames(summary(glm2)$coefficients) == "trtgroupDrug", ]["Estimate"] -> est_2
direction2 <- ifelse(sign(est_2) == 1, "higher", "lower")
direction <- ifelse(sign(est_2) == 1, "incresase", "decrease")
est_2_show = round(abs(exp(est_2)), 2)

summary(glm2)$coefficients[rownames(summary(glm2)$coefficients) == "trtgroupDrug:mutp", ]["Estimate"] -> est_int

confint(glm2)[rownames(confint(glm2)) == "trtgroupDrug:mutpre"] %>% 
  round(., 2) %>% 
  paste0(., collapse = ", ") %>% 
  paste0("(", ., ")") -> confint_int


confint(glm2)[rownames(confint(glm2)) == "trtgroupDrug"] %>% 
  round(., 2) %>% 
  paste0(., collapse = ", ") %>% 
  paste0("(", ., ")") -> confint_2

significace_2 <- summary(glm2)$coefficients[rownames(summary(glm2)$coefficients) == "trtgroupDrug", ]["Pr(>|t|)"]
signif_2 = ifelse(significace_2 >= 0.05, 
                   "interval includes 0, there is no evidence of a statistically significant association", 
                   "interval does not include 0, there is strong evidence of a statistically significant association")

```

Estimated effect modification of baseline MS log(cfu/ml) measurements for different levels of treatment is `r round(est_int, 2)`, after 
adjusting for other predictors. The interval is bounded by `r confint_int` the 95% confidence interval, which shows no evidence that 
the effect of baseline MS levels on the 3 month-post treatment MS levels differs for the two groups. 

It appears that neither the main effect nor the interaction terms are statistically significant. This may be due to the fact the the 
effect of treatment is diluted, or shared, among the two terms. 

I also notice that the standard error for the treatment increased drastically, while the point estimate changed a little. This may 
suggest that with the inclusion of an interaction term we introduce more collinearity among predictors, inflate standard errors, and 
reduce statistical significance of the two effects. 

We may suggest centering the baseline MS levels, and other methods to address these issues. For example, these are model estimates using the same 
glm family and link function, but centering the baseline MS levels around the sample mean. @tbl-ex shows that the main effect of treatment aligns closely 
with the previous results. 

```{r check collinearity issues }
#| label: tbl-ex
#| tbl-cap: "Effect of centering of baseline MS levels on model estimates" 
#| 
dental2.2 <- dental2 %>% 
  mutate(mutpre = mutpre - mean(mutpre))

test1 <- glm(mut3mos ~ trtgroup * mutpre, data = dental2, family = gaussian(link = "identity"))
test2 <- glm(mut3mos ~ trtgroup * mutpre, data = dental2.2, family = gaussian(link = "identity"))


summary(test2)$coefficients %>% 
  kable(booktabs = T, 
        digits = 2, 
        align = 'c'
        ) %>% 
  kable_styling(latex_options = 'hold_position') %>% 
  add_footnote("trtgroupDrug represents the effect of treatment on the outcome") %>% 
  add_footnote("Placebo is the reference for `Drug` group")%>% 
  add_footnote("trtgroupDrug:mutpr represents treatment effect modification")

```

## 2 - D 

```{r 2a - model 4}
#| label: tbl-2d
#| tbl-cap: "Gaussian GLM with identity link model estiamtes"

dental2 = dental %>% filter(trtgroup != "Drug")
dental2$trtgroup = factor(dental2$trtgroup, levels = c("NoGum", "Placebo"))

glm2 <- glm(mut3mos ~ trtgroup + mutpre, data = dental2, family = gaussian(link = "identity"))

summary(glm2)$coefficients %>% 
  kable(booktabs = T, 
        digits = 2, 
        align = 'c'
        ) %>% 
  kable_styling(latex_options = 'hold_position') %>% 
  add_footnote("trtgroupPlacebo represents the effect of placebo on the outcome") %>% 
  add_footnote("'No Gum' is the reference for Placebo group")

summary(glm2)$coefficients[rownames(summary(glm2)$coefficients) == "trtgroupPlacebo", ]["Estimate"] -> est_2
direction2 <- ifelse(sign(est_2) == 1, "higher", "lower")
direction <- ifelse(sign(est_2) == 1, "incresase", "decrease")
est_2_show = round(abs(exp(est_2)), 2)

confint(glm2)[rownames(confint(glm2)) == "trtgroupPlacebo"] %>% 
  round(., 2) %>% 
  paste0(., collapse = ", ") %>% 
  paste0("(", ., ")") -> confint_2

significace_2 <- summary(glm2)$coefficients[rownames(summary(glm2)$coefficients) == "trtgroupPlacebo", ]["Pr(>|t|)"]
signif_2 = ifelse(significace_2 >= 0.05, 
                   "interval includes 0, there is no evidence of a statistically significant association", 
                   "interval does not include 0, there is strong evidence of a statistically significant association")

```

@tbl-2d shows contrast between the average levels of MS between placebo and "no-intervention" group three months after stating treatment, after adjusting for other predictors. 
Average MS levels for the placebo group were `r round(abs(est_2),2) ` log(cfu/ml) `r direction2` than MS levels for no treatment group, 
after accounting for other predictors. 
The estimate is bounded by the `r confint_2` 95% confidence interval. The `r signif_2` between placebo/no-treatment assignment and log(cfu/ml) MS 
levels. There is no evidence that Placebo improves MS levels, while active treatment does. 

# Question 3 

```{R log reg model data prep }

dental_lr <- 
  dental %>% 
  mutate(
    mut1mos_4.5_flag = ifelse(mut1mos >= 4.5, 1, 0), 
    trtgroup = factor(trtgroup, levels = c("NoGum", "Placebo", "Drug"))
  )

```

## 3 - A

**Assumptions** 

Assume that $f(E[Y_i])$ can be modeled as a linear combination of predictors. 

Assume that $Y_i$ are independent Binomial random variables with parameters $p_i$ and $n=1$. herefore, variance for each $Y_i$ is given by $p_i \times (1-p_i)$. 

We are fitting a logistic regression model, which uses a logit link function. In context of our model we can write 
assumed model as 

\begin{equation}
log[\frac{P(Y_i = 1)}{1 - P(Y_i = 1)}] =  
\beta_0 + \beta_1 * I(Group = "Placebo") + \beta_2 * I(Group = "Drug") = \textbf{X}_i \beta  
\end{equation}

In terms of parameters $\beta_j$, variance can be written as 

\begin{equation}
Var(Y_i | \textbf{X}_i) = \frac{exp(\textbf{X}_i \beta)}{1+exp(\textbf{X}_i \beta)} \times \frac{1}{1+exp(\textbf{X}_i \beta)}
\end{equation}


```{r 3a log reg model }
#| label: tbl-3a-OR
#| tbl-cap: "Binary Outcome GLM with Logit link model estiamtes" 
dental_lr <- dental_lr %>% 
  mutate(trtgroup = factor(trtgroup, levels = c("Placebo", "NoGum", "Drug")))

lr_3a <- glm(mut1mos_4.5_flag ~ trtgroup, data = dental_lr, family = binomial(link = "logit"))

summary(lr_3a)$coefficients %>% 
  data.frame() %>% 
  mutate_at(
    vars("Estimate"), ~ exp(.)  
  ) %>% 
  kable(booktabs = T, 
        digits = 2, 
        align = 'c', 
        col.names = c("Exp. Estimate", "Log-standard Error", "Z-statstic", "Pr(>|t|)") 
        ) %>% 
  kable_styling(latex_options = 'hold_position') %>% 
  add_footnote("`NoGum` shows odds ratio for NoGum vs Placebo") %>% 
  add_footnote("`trtgroupDrug` shows odds ratio for Drug vs Placebo")


summary(lr_3a)$coefficients[rownames(summary(lr_3a)$coefficients) == "trtgroupDrug", ]["Estimate"] -> est_3
direction2 <- ifelse(sign(est_3) == 1, "higher", "lower")
direction <- ifelse(sign(est_3) == 1, "incresase", "decrease")
est_2_show = round(abs(exp(est_3)), 2)
est_2_show_prct = abs(round((exp(est_3) - 1), 2))*100

confint(lr_3a)[rownames(confint(lr_3a)) == "trtgroupDrug"] %>% 
  exp(.) %>% 
  round(., 2) %>% 
  paste0(., collapse = ", ") %>% 
  paste0("(", ., ")") -> confint_2

significace_2 <- summary(lr_3a)$coefficients[rownames(summary(lr_3a)$coefficients) == "trtgroupDrug", ]["Pr(>|z|)"]
signif_2 = ifelse(significace_2 >= 0.05, 
                   "interval includes 1, there is no evidence of a statistically significant association", 
                   "interval does not include 1, there is strong evidence of a statistically significant association")

```


@tbl-3a-OR shows contrast between the odds of having elevated MS levels one month post treatment for those in the treatment group 
when compared to the placebo group. Contrast is expressed as odds ratio. 
The odds of having elevated MS levels for the treatment group were `r round(abs(est_2_show),2) ` times  the odds of 
the placebo group. Alternatively, the odds of having elevated MS levels in the treatment group were approximately `r est_2_show_prct`% `r direction2` than the odds of having elevated MS levels in the placebo group. 
The estimate is bounded by the `r confint_2` 95% confidence interval. The `r signif_2` between treatment assignment and likelihood 
of elevated MS levels. 

## 3 - B 

To compare relative risks, of risk ratios, we need to fit a binomial family glm with a log link function. 

We assume that Bernoulli random variables $Y_i$ are independent. 

Let $E[Y_i] = P(Y_i = 1) = p_i$, then we can write mean of each $Y_i$ as exponentiation linear combination of predictors, 
$p_i = exp(\textbf{X}_i \beta)$. 

Using this model, variance of Bernoulli random variable can be written as $\Large exp(\textbf{X}_i \beta) * (1- exp(\textbf{X}_i \beta))$

```{r 3b log reg model }
#| label: tbl-3a-RR
#| tbl-cap: "Binary Outcome GLM with log link model estiamtes" 
lr_3b <- glm(mut1mos_4.5_flag ~ trtgroup, data = dental_lr, family = binomial(link = "log"))

summary(lr_3b)$coefficients %>% 
  data.frame() %>% 
  mutate_at(
    vars("Estimate"), ~ exp(.)  
  ) %>% 
  kable(booktabs = T, 
        digits = 2, 
        align = 'c', 
        col.names = c("Exp. Estimate", "Log-standard Error", "Z-statstic", "Pr(>|t|)") 
        ) %>% 
  kable_styling(latex_options = 'hold_position') %>% 
  add_footnote("`NoGum` shows odds ratio for NoGum vs Placebo") %>% 
  add_footnote("`trtgroupDrug` shows odds ratio for Drug vs Placebo")


summary(lr_3b)$coefficients[rownames(summary(lr_3b)$coefficients) == "trtgroupDrug", ]["Estimate"] -> est_3
direction2 <- ifelse(sign(est_3) == 1, "higher", "lower")
direction <- ifelse(sign(est_3) == 1, "incresase", "decrease")
est_2_show = round(abs(exp(est_3)), 2)
est_2_show_prct = abs(round((exp(est_3) - 1), 2))*100

confint(lr_3b)[rownames(confint(lr_3b)) == "trtgroupDrug"] %>% 
  exp(.) %>% 
  round(., 2) %>% 
  paste0(., collapse = ", ") %>% 
  paste0("(", ., ")") -> confint_2

significace_2 <- summary(lr_3b)$coefficients[rownames(summary(lr_3b)$coefficients) == "trtgroupDrug", ]["Pr(>|z|)"]
signif_2 = ifelse(significace_2 >= 0.05, 
                   "interval includes 1, there is no evidence of a statistically significant association", 
                   "interval does not include 1, there is strong evidence of a statistically significant association")

```


@tbl-3a-RR shows contrast between the risks of having elevated MS levels one month post treatment for those in the treatment group 
when compared to the placebo group. Contrast is expressed a risk ratio. 
The risks of having elevated MS levels for the treatment group were `r round(abs(est_2_show),2) ` times  the risks of 
the placebo group. Alternatively, the risks of having elevated MS levels in the treatment group were approximately `r est_2_show_prct`% `r direction2` than the risks of having elevated MS levels in the placebo group. 
The estimate is bounded by the `r confint_2` 95% confidence interval. The `r signif_2` between treatment assignment and likelihood 
of elevated MS levels. 

## 3 - C 

We expect that the direction of Risk Ratio and Odds Ratio contrast should be the same. Both are a function of an estimated model 
parameter $p_i$. However, odds are a non-linear function that takes in this parameter. Therefore, due to a non-linear nature, the 
ratio of odds is no longer similar to the ratio of risks. 
